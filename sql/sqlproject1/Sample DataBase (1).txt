-- SQL Training Program: Sample Banking Dataset
-- This script creates a database and populates it with sample data
-- for a banking scenario. It is designed for Microsoft SQL Server.

-- IMPORTANT: Run these commands in SQL Server Management Studio (SSMS).
-- Execute each section (CREATE DATABASE, USE, CREATE TABLE, INSERT INTO) separately.

-- 1. Create the Database
-- This command creates a new database named 'BankDB'.
IF DB_ID('BankDB') IS NOT NULL
BEGIN
    ALTER DATABASE BankDB SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE BankDB;
END
GO

CREATE DATABASE BankDB;
GO

-- 2. Use the Database
-- This command tells SQL Server to use 'BankDB' for subsequent operations.
USE BankDB;
GO

-- 3. Create Tables

-- Customers Table: Stores customer demographic information.
CREATE TABLE Customers (
    customer_id INT PRIMARY KEY IDENTITY(1001,1), -- Unique identifier for each customer
    first_name VARCHAR(50) NOT NULL,              -- Customer's first name
    last_name VARCHAR(50) NOT NULL,               -- Customer's last name
    email VARCHAR(100) UNIQUE,                    -- Customer's email (must be unique)
    phone_number VARCHAR(20),                     -- Customer's phone number
    address VARCHAR(255),                         -- Customer's street address
    city VARCHAR(50),                             -- Customer's city
    state VARCHAR(50),                            -- Customer's state/province
    zip_code VARCHAR(10),                         -- Customer's zip/postal code
    date_of_birth DATE,                           -- Customer's date of birth
    registration_date DATETIME DEFAULT GETDATE()  -- Date and time customer registered
);

-- Accounts Table: Stores information about bank accounts.
CREATE TABLE Accounts (
    account_id INT PRIMARY KEY IDENTITY(2001,1), -- Unique identifier for each account
    customer_id INT NOT NULL,                     -- Foreign Key linking to Customers table
    account_type VARCHAR(50) NOT NULL,            -- Type of account (e.g., 'Savings', 'Checking', 'Loan', 'Credit Card')
    balance DECIMAL(18, 2) NOT NULL,              -- Current balance in the account
    currency VARCHAR(3) DEFAULT 'USD',            -- Currency of the account (e.g., 'USD', 'GBP', 'EUR')
    open_date DATE NOT NULL,                      -- Date the account was opened
    status VARCHAR(20) DEFAULT 'Active',          -- Current status of the account (e.g., 'Active', 'Closed', 'Suspended')
    interest_rate DECIMAL(5, 4),                  -- Interest rate for savings/loan accounts
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id) -- Establishes relationship with Customers table
);

-- Transactions Table: Records all financial transactions.
CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY IDENTITY(3001,1), -- Unique identifier for each transaction
    account_id INT NOT NULL,                         -- Foreign Key linking to Accounts table
    transaction_date DATETIME DEFAULT GETDATE(),     -- Date and time of the transaction
    amount DECIMAL(18, 2) NOT NULL,                  -- Amount of the transaction
    transaction_type VARCHAR(50) NOT NULL,           -- Type of transaction (e.g., 'Deposit', 'Withdrawal', 'Transfer', 'Fee', 'Payment')
    description VARCHAR(255),                        -- Brief description of the transaction
    FOREIGN KEY (account_id) REFERENCES Accounts(account_id) -- Establishes relationship with Accounts table
);

-- Loans Table: Details about loan accounts.
CREATE TABLE Loans (
    loan_id INT PRIMARY KEY IDENTITY(4001,1),     -- Unique identifier for each loan
    account_id INT NOT NULL,                      -- Foreign Key linking to Accounts table (where account_type = 'Loan')
    loan_amount DECIMAL(18, 2) NOT NULL,          -- Original amount of the loan
    interest_rate DECIMAL(5, 4) NOT NULL,         -- Interest rate for the loan
    start_date DATE NOT NULL,                     -- Date the loan started
    end_date DATE,                                -- Expected end date of the loan
    loan_status VARCHAR(50) DEFAULT 'Active',     -- Current status of the loan (e.g., 'Active', 'Paid Off', 'Default')
    FOREIGN KEY (account_id) REFERENCES Accounts(account_id) -- Establishes relationship with Accounts table
);

-- Branches Table: Information about bank branches.
CREATE TABLE Branches (
    branch_id INT PRIMARY KEY IDENTITY(5001,1),   -- Unique identifier for each branch
    branch_name VARCHAR(100) NOT NULL,            -- Name of the branch
    address VARCHAR(255),                         -- Branch street address
    city VARCHAR(50),                             -- Branch city
    state VARCHAR(50),                            -- Branch state/province
    zip_code VARCHAR(10),                         -- Branch zip/postal code
    manager_name VARCHAR(100)                     -- Name of the branch manager
);
GO

-- 4. Insert Sample Data

-- Insert data into Customers table
INSERT INTO Customers (first_name, last_name, email, phone_number, address, city, state, zip_code, date_of_birth, registration_date) VALUES
('Alice', 'Smith', 'alice.s@example.com', '555-1001', '123 Oak Ave', 'Springfield', 'IL', '62701', '1980-05-15', '2010-01-10 09:00:00'),
('Bob', 'Johnson', 'bob.j@example.com', '555-1002', '456 Pine St', 'Springfield', 'IL', '62701', '1975-11-22', '2011-03-20 10:30:00'),
('Charlie', 'Brown', 'charlie.b@example.com', '555-1003', '789 Elm Rd', 'Shelbyville', 'IL', '62565', '1992-07-01', '2012-06-01 14:00:00'),
('Diana', 'Prince', 'diana.p@example.com', '555-1004', '101 Maple Ln', 'Capital City', 'CA', '90210', '1988-03-10', '2013-09-05 11:15:00'),
('Eve', 'Davis', 'eve.d@example.com', '555-1005', '202 Birch Blvd', 'Springfield', 'IL', '62701', '1995-09-20', '2014-12-01 16:45:00'),
('Frank', 'White', 'frank.w@example.com', '555-1006', '303 Cedar Dr', 'Shelbyville', 'IL', '62565', '1970-01-05', '2015-02-14 08:00:00'),
('Grace', 'Lee', 'grace.l@example.com', '555-1007', '404 Spruce Ct', 'Capital City', 'CA', '90210', '1982-04-18', '2016-07-22 13:00:00'),
('Henry', 'Green', 'henry.g@example.com', '555-1008', '505 Poplar St', 'Springfield', 'IL', '62701', '1990-12-12', '2017-01-30 09:30:00'),
('Ivy', 'King', 'ivy.k@example.com', '555-1009', '606 Willow Way', 'Shelbyville', 'IL', '62565', '1985-02-28', '2018-05-10 10:00:00'),
('Jack', 'Black', 'jack.b@example.com', '555-1010', '707 Aspen Rd', 'Capital City', 'CA', '90210', '1978-06-06', '2019-08-01 15:00:00');

-- Insert data into Accounts table
INSERT INTO Accounts (customer_id, account_type, balance, currency, open_date, status, interest_rate) VALUES
(1001, 'Checking', 1500.75, 'USD', '2010-01-15', 'Active', NULL),
(1001, 'Savings', 5000.00, 'USD', '2010-01-15', 'Active', 0.0150),
(1002, 'Checking', 2300.50, 'USD', '2011-03-25', 'Active', NULL),
(1002, 'Loan', -120000.00, 'USD', '2015-06-01', 'Active', 0.0425), -- Loan balance is negative
(1003, 'Savings', 750.20, 'USD', '2012-06-05', 'Active', 0.0120),
(1004, 'Credit Card', -500.00, 'USD', '2013-09-10', 'Active', 0.1800), -- Credit card balance is negative (owed)
(1005, 'Checking', 300.00, 'USD', '2014-12-05', 'Active', NULL),
(1006, 'Savings', 15000.00, 'USD', '2015-02-20', 'Active', 0.0180),
(1007, 'Checking', 800.00, 'USD', '2016-07-25', 'Active', NULL),
(1008, 'Savings', 2500.00, 'USD', '2017-02-01', 'Active', 0.0160),
(1009, 'Checking', 120.00, 'USD', '2018-05-15', 'Active', NULL),
(1010, 'Savings', 1000.00, 'USD', '2019-08-05', 'Active', 0.0140);

-- Insert data into Transactions table
INSERT INTO Transactions (account_id, transaction_date, amount, transaction_type, description) VALUES
(2001, '2023-01-05 10:00:00', 500.00, 'Deposit', 'Salary deposit'),
(2001, '2023-01-06 11:30:00', -50.00, 'Withdrawal', 'ATM withdrawal'),
(2002, '2023-01-07 09:00:00', 100.00, 'Deposit', 'Check deposit'),
(2003, '2023-01-08 14:15:00', -200.00, 'Transfer', 'Online transfer'),
(2004, '2023-01-09 16:00:00', 1500.00, 'Payment', 'Loan payment'),
(2005, '2023-01-10 08:45:00', -25.00, 'Fee', 'Monthly service fee'),
(2006, '2023-01-11 12:00:00', 75.00, 'Interest', 'Savings interest'),
(2001, '2023-02-01 10:00:00', 600.00, 'Deposit', 'Salary deposit'),
(2002, '2023-02-02 11:00:00', -100.00, 'Withdrawal', 'Online purchase'),
(2004, '2023-02-05 13:00:00', 1500.00, 'Payment', 'Loan payment');

-- Insert data into Loans table (linking to existing loan accounts)
INSERT INTO Loans (account_id, loan_amount, interest_rate, start_date, end_date, loan_status) VALUES
(2004, 120000.00, 0.0425, '2015-06-01', '2035-06-01', 'Active'),
(2013, 5000.00, 0.0650, '2020-01-10', '2025-01-10', 'Active'); -- Assuming account 2013 is a loan account for customer 1009

-- Insert data into Branches table
INSERT INTO Branches (branch_name, address, city, state, zip_code, manager_name) VALUES
('Main Street Branch', '100 Main St', 'Springfield', 'IL', '62701', 'John Doe'),
('Downtown Branch', '250 Market St', 'Shelbyville', 'IL', '62565', 'Jane Smith'),
('Capital City Branch', '500 Park Ave', 'Capital City', 'CA', '90210', 'Mike Brown');
